
#ifndef SPARTOR_PROJECTION_H__
#define SPARTOR_PROJECTION_H__


#define DECL_FUNC_T2N(name) int (name)(CONTEXT_t *co,int x,int y,int z)
#define DECL_FUNC_P2N(name) int (name)(V *o)
#define DECL_FUNC_N2T(name) int (name)(CONTEXT_t *co,int x, int y)

#define DIME_SHIFTX(co,x)       ((x) - (co)->tileuw/2)
#define DIME_SHIFTY(co,y)       ((y)                 )

DECL_FUNC_T2N(TILE2NATIVE_X_DIMETRIC);
DECL_FUNC_T2N(TILE2NATIVE_Y_DIMETRIC);
DECL_FUNC_P2N(POINT2NATIVE_X_DIMETRIC);
DECL_FUNC_P2N(POINT2NATIVE_Y_DIMETRIC);
DECL_FUNC_N2T(NATIVE2TILE_X_DIMETRIC);
DECL_FUNC_N2T(NATIVE2TILE_Y_DIMETRIC);
DECL_FUNC_N2T(NATIVE2TILE_Z_DIMETRIC);

DECL_FUNC_T2N(TILE2NATIVE_X_ORTHO);
DECL_FUNC_T2N(TILE2NATIVE_Y_ORTHO);
DECL_FUNC_P2N(POINT2NATIVE_X_ORTHO);
DECL_FUNC_P2N(POINT2NATIVE_Y_ORTHO);
DECL_FUNC_N2T(NATIVE2TILE_X_ORTHO);
DECL_FUNC_N2T(NATIVE2TILE_Y_ORTHO);
DECL_FUNC_N2T(NATIVE2TILE_Z_ORTHO);

typedef DECL_FUNC_T2N(*FUNC_T2N);
typedef DECL_FUNC_P2N(*FUNC_P2N);
typedef DECL_FUNC_N2T(*FUNC_N2T);

FUNC_T2N TILE2NATIVE_X;
FUNC_T2N TILE2NATIVE_Y;
FUNC_P2N POINT2NATIVE_X;
FUNC_P2N POINT2NATIVE_Y;
FUNC_N2T NATIVE2TILE_X;
FUNC_N2T NATIVE2TILE_Y;
FUNC_N2T NATIVE2TILE_Z;

// PROJECTION_MODE(ORTHO|DIMETRIC)
#define PROJECTION_MODE(MODE) do{ TILE2NATIVE_X  = TILE2NATIVE_X_  ## MODE; \
                                  TILE2NATIVE_Y  = TILE2NATIVE_Y_  ## MODE; \
                                  POINT2NATIVE_X = POINT2NATIVE_X_ ## MODE; \
                                  POINT2NATIVE_Y = POINT2NATIVE_Y_ ## MODE; \
                                  NATIVE2TILE_X  = NATIVE2TILE_X_  ## MODE; \
                                  NATIVE2TILE_Y  = NATIVE2TILE_Y_  ## MODE; \
                                  NATIVE2TILE_Z  = NATIVE2TILE_Z_  ## MODE; }while(0)

#endif

